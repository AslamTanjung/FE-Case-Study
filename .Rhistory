#kernel_cov <- as.numeric(xts(kernel_cov$V1, kernel_cov$Index))
ret <-
read.csv(file = "Returns & RV/Open_to_close_log_returns.csv", sep = " ")
setwd("~/VU/FE Case Study")
#kernel_cov <- as.numeric(xts(kernel_cov$V1, kernel_cov$Index))
ret <-
read.csv(file = "Returns & RV/Open_to_close_log_returns.csv", sep = " ")
ret$Index <- as.POSIXct(ret$Index, format = "%Y-%m-%d %H:%M:%S")
ret <- xts(ret$V1, ret$Index)
library(GAS)
library(readr)
library(xts)
library(parallel)
library(dplyr)
library(highfrequency)
library(TTR)
library(rugarch)
library(ggplot2)
library(TSstudio)
library(forecast)
#kernel_cov <- as.numeric(xts(kernel_cov$V1, kernel_cov$Index))
ret <-
read.csv(file = "Returns & RV/Open_to_close_log_returns.csv", sep = " ")
ret$Index <- as.POSIXct(ret$Index, format = "%Y-%m-%d %H:%M:%S")
ret <- xts(ret$V1, ret$Index)
spec <- UniGASSpec(
Dist = name,
ScalingType = "Identity",
GASPar = list(
location = TRUE,
scale = TRUE,
skewness = TRUE,
shape = FALSE,
shape2 = FALSE
)
)
spec <- UniGASSpec(
Dist = "ast",
ScalingType = "Identity",
GASPar = list(
location = TRUE,
scale = TRUE,
skewness = TRUE,
shape = FALSE,
shape2 = FALSE
)
)
fit <-
UniGASFit(spec, ret, fn.optimizer = fn.optim, Compute.SE = TRUE)
fit
sim <- getObs(UniGASSim(fit = fit, T.sim = 1000000))
fit_sim <- UniGASFit(spec, sim, fn.optimizer = fn.optim, Compute.SE = TRUE)
fit_sim
sim <- getObs(UniGASSim(fit = fit, T.sim = 10000))
fit_sim <- UniGASFit(spec, sim, fn.optimizer = fn.optim, Compute.SE = TRUE)
fit_sim
spec <- UniGASSpec(
Dist = "ast",
ScalingType = "Identity",
GASPar = list(
location = TRUE,
scale = TRUE,
skewness = TRUE,
shape = TRUE,
shape2 = TRUE
)
)
fit <-
UniGASFit(spec, ret, fn.optimizer = fn.optim, Compute.SE = TRUE)
fit
fit@Estimates$lParList
fit@Estimates$Moments
fit@Estimates$Moments[,2]
var <- fit@Estimates$Moments[,2]
var
kernel_cov <- read.csv("Returns & RV/RV_kernel.csv", sep = " ")
kernel_cov$Index <-
as.POSIXct(kernel_cov$Index, format = "%Y-%m-%d %H:%M:%S")
plot(kernel_cov, type = "l")
lines(var)
lines(var, color = 'green')
plot(kernel_cov, type = "l")
lines(var)
plot(var)
plot(kernel_cov, type = "l")
lines(var, 'balck')
lines(var, col = 'green')
plot(var, type = "l")
lines(kernel_cov, col = 'green')
plot(var, type = "l")
lines(kernel_cov, col = 'green')
plot(var, type = "l", col =  'red')
lines(kernel_cov, col = 'green')
kernel_cov <- read.csv("Returns & RV/RV_kernel.csv", sep = " ")
kernel_cov
names(kernel_cov)
plot(var, type = "l", col =  'red')
lines(kernel_cov$V1, col = 'green')
fit <-
UniGASFit(spec, ret[500:length(ret)], fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- fit@Estimates$Moments[,2]
plot(var, type = "l", col =  'red')
lines(kernel_cov$V1, col = 'green')
plot(var, type = "l", col =  'red')
lines(kernel_cov$V1[500:length(kernel_cov)], col = 'green')
plot(kernel_cov$V1[500:length(kernel_cov)], col = 'green')
plot(kernel_cov$V1[500:length(kernel_cov)], col = 'green', type = "l")
lines(var, type = "l", col =  'red')
plot(kernel_cov$V1[500:length(kernel_cov)], col = 'green', type = "l")
lines(var, type = "l", col =  'red')
fit <-
UniGASFit(spec, tail(ret, 200), fn.optimizer = fn.optim, Compute.SE = TRUE)
fit
var <- fit@Estimates$Moments[,2]
plot(tail(kernel_cov, 200), col = 'green', type = "l")
plot(tail(kernel_cov$V1, 200), col = 'green', type = "l")
lines(var, type = "l", col =  'red')
fit <-
UniGASFit(spec, tail(ret, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- fit@Estimates$Moments[,2]
plot(tail(kernel_cov$V1, 1000), col = 'green', type = "l")
lines(var, type = "l", col =  'red')
fit <-
UniGASFit(spec, ret, fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- fit@Estimates$Moments[,2]
plot(kernel_cov$V1, col = 'green', type = "l")
lines(var, type = "l", col =  'red')
spec <- UniGASSpec(
Dist = "alp",
ScalingType = "Identity",
GASPar = list(
location = TRUE,
scale = TRUE,
skewness = TRUE,
shape = TRUE,
shape2 = TRUE
)
)
spec <- UniGASSpec(
Dist = "ald",
ScalingType = "Identity",
GASPar = list(
location = TRUE,
scale = TRUE,
skewness = TRUE,
shape = TRUE,
shape2 = TRUE
)
)
fit <-
UniGASFit(spec, ret, fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- fit@Estimates$Moments[,2]
plot(kernel_cov$V1, col = 'green', type = "l")
lines(var, type = "l", col =  'red')
spec <- UniGASSpec(
Dist = "ast",
ScalingType = "Identity",
GASPar = list(
location = TRUE,
scale = TRUE,
skewness = TRUE,
shape = FALSE,
shape2 = FALSE
)
)
spec <- UniGASSpec(
Dist = "ast",
ScalingType = "Identity",
GASPar = list(
location = TRUE,
scale = TRUE,
skewness = TRUE,
shape = FALSE,
shape2 = FALSE
)
)
fit <-
UniGASFit(spec, ret, fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- fit@Estimates$Moments[,2]
plot(kernel_cov$V1, col = 'green', type = "l")
lines(var, type = "l", col =  'red')
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
n_test <- 252 * 2
kernel_cov <- read.csv("Returns & RV/RV_kernel.csv", sep = " ")
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
kernel_cov <- read.csv("Returns & RV/RV_kernel2.csv", sep = " ")
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
var <- fit@Estimates$Moments[,2]
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(var, type = "l", col =  'red')
plot(kernel_cov$V1, col = 'green', type = "l")
lines(var, type = "l", col =  'red')
lines(tail(var, 504), type = "l", col =  'red')
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'red')
fit <-
UniGASFit(spec, tail(ret, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- fit@Estimates$Moments[,2]
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'red')
## Close-to-close
ret_cc <-
read.csv(file = "Returns & RV/Close_to_close_log_returns.csv", sep = " ")
ret_cc$Index <- as.POSIXct(ret_cc$Index, format = "%Y-%m-%d %H:%M:%S")
ret_cc <- xts(ret_cc$V1, ret_cc$Index)
ret_cc <- ret_cc[2:length(ret_cc),]
## Close-to-close
ret_cc <-
read.csv(file = "Returns & RV/Close_to_close_log_returns.csv", sep = " ")
ret_cc$Index <- as.POSIXct(ret_cc$Index, format = "%Y-%m-%d %H:%M:%S")
ret_cc <- xts(ret_cc$V1, ret_cc$Index)
fit <-
UniGASFit(spec, tail(ret, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- fit@Estimates$Moments[,2]
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'red')
fit <-
UniGASFit(spec, tail(ret_cc, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- fit@Estimates$Moments[,2]
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'red')
spec <- UniGASSpec(
Dist = "ast",
ScalingType = "Inverse",
GASPar = list(
location = TRUE,
scale = TRUE,
skewness = TRUE,
shape = TRUE,
shape2 = TRUE
)
)
fit <-
UniGASFit(spec, tail(ret_cc, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- fit@Estimates$Moments[,2]
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'red')
var <- fit@Estimates$Moments[,2]
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'red')
?UniGASSpec
spec <- UniGASSpec(
Dist = "ast",
ScalingType = "Inv",
GASPar = list(
location = TRUE,
scale = TRUE,
skewness = TRUE,
shape = TRUE,
shape2 = TRUE
)
)
fit <-
UniGASFit(spec, tail(ret_cc, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- fit@Estimates$Moments[,2]
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'red')
spec <- UniGASSpec(
Dist = "ast",
ScalingType = "InvSqrt",
GASPar = list(
location = TRUE,
scale = TRUE,
skewness = TRUE,
shape = TRUE,
shape2 = TRUE
)
)
fit <-
UniGASFit(spec, tail(ret_cc, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- fit@Estimates$Moments[,1]
lines(tail(var, 504), type = "l", col =  'red')
var <- fit@Estimates$Moments[,2]
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'red')
spec <- UniGASSpec(
Dist = "ast",
ScalingType = "Identity",
GASPar = list(
location = FALSE,
scale = TRUE,
skewness = FALSE,
shape = FALSE,
shape2 = FALSE
)
)
fit <-
UniGASFit(spec, tail(ret_cc, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- fit@Estimates$Moments[,2]
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'red')
var <- fit@Estimates$lParList
var
var <- fit@Estimates$IC
var
var <- fit@Estimates$StaticFit
var
fit
fit@GASDyn$vLLK
fit@GASDyn$mTheta
fit@Data
fit@ModelInfo
fit
lines(tail(var, 1000), type = "l", col =  'red')
plot(tail(kernel_cov$V1, 1000), col = 'green', type = "l")
lines(tail(var, 1000), type = "l", col =  'red')
var <- fit@Estimates$Moments[,2]
plot(tail(kernel_cov$V1, 1000), col = 'green', type = "l")
lines(tail(var, 1000), type = "l", col =  'red')
var <- getFilteredParameters(fit)
var
names(var)
var <- getFilteredParameters(fit)$scale
var <- getFilteredParameters(fit)[,"scale"]
var
plot(tail(kernel_cov$V1, 1000), col = 'green', type = "l")
lines(tail(var, 1000), type = "l", col =  'red')
var <- getFilteredParameters(fit)[,"scale"]**2
plot(tail(kernel_cov$V1, 1000), col = 'green', type = "l")
lines(tail(var, 1000), type = "l", col =  'red')
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'red')
spec <- UniGASSpec(
Dist = "st",
ScalingType = "Identity",
GASPar = list(
location = FALSE,
scale = TRUE,
skewness = FALSE,
shape = FALSE,
shape2 = FALSE
)
)
fit <-
UniGASFit(spec, tail(ret_cc, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
fit <-
UniGASFit(spec, tail(ret_cc, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
spec <- UniGASSpec(
Dist = "std",
ScalingType = "Identity",
GASPar = list(
location = FALSE,
scale = TRUE,
skewness = FALSE,
shape = FALSE,
shape2 = FALSE
)
)
fit <-
UniGASFit(spec, tail(ret_cc, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- getFilteredParameters(fit)[,"scale"]**2
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'red')
spec <- UniGASSpec(
Dist = "std",
ScalingType = "Identity",
GASPar = list(
location = TRUE,
scale = TRUE,
skewness = TRUE,
shape = TRUE,
shape2 = FALSE
)
)
fit <-
UniGASFit(spec, tail(ret_cc, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- getFilteredParameters(fit)[,"scale"]**2
lines(tail(var, 504), type = "l", col =  'red')
lines(tail(var, 504), type = "l", col =  'purple')
spec <- UniGASSpec(
Dist = "ald",
ScalingType = "Identity",
GASPar = list(
location = FALSE,
scale = TRUE,
skewness = FALSE,
shape = FALSE,
shape2 = FALSE
)
)
fit <-
UniGASFit(spec, tail(ret_cc, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- getFilteredParameters(fit)[,"scale"]**2
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'purple')
spec <- UniGASSpec(
Dist = "ast",
ScalingType = "Identity",
GASPar = list(
location = FALSE,
scale = TRUE,
skewness = FALSE,
shape = FALSE,
shape2 = FALSE
)
)
fit <-
UniGASFit(spec, tail(ret_cc, 1000), fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- getFilteredParameters(fit)[,"scale"]**2
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'purple')
var <- getFilteredParameters(fit)[,"scale"]**2
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
var <- getFilteredParameters(fit)[,"scale"]**2
plot(tail(kernel_cov$V1, 504), col = 'green', type = "l")
lines(tail(var, 504), type = "l", col =  'purple')
fit
fit <-
UniGASFit(spec, ret_cc, fn.optimizer = fn.optim, Compute.SE = TRUE)
spec <- UniGASSpec(
Dist = "ast",
ScalingType = "Identity",
GASPar = list(
location = FALSE,
scale = TRUE,
skewness = FALSE,
shape = FALSE,
shape2 = FALSE
)
)
fit <-
UniGASFit(spec, ret_cc, fn.optimizer = fn.optim, Compute.SE = TRUE)
warnings()
ret_cc <- ret_cc[2:length(ret_cc),]
fit <-
UniGASFit(spec, ret_cc, fn.optimizer = fn.optim, Compute.SE = TRUE)
var <- getFilteredParameters(fit)[,"scale"]**2
plot(kernel_cov$V1, col = 'green', type = "l")
lines(var, type = "l", col =  'purple')
var <- getFilteredParameters(fit)[,"scale"]**2
var <- getFilteredParameters(fit)[,"scale"]**2
plot(kernel_cov$V1, col = 'green', type = "l")
lines(var, type = "l", col =  'purple')
fit
sim <- getObs(UniGASSim(fit = fit, T.sim = 10000))
plot(sim, type = 'l')
fit_sim <- UniGASFit(spec, sim, fn.optimizer = fn.optim, Compute.SE = TRUE)
